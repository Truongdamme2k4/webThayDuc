{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\OneDrive\\\\Desktop\\\\webt6\\\\frontend\\\\src\\\\pages\\\\Post\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchPost();\n  }, [slug]);\n  const fetchPost = async () => {\n    try {\n      const response = await fetch(`https://c4flhn-3000.csb.app/api/blogs/${slug}`);\n      const data = await response.json();\n      setPost(data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch blog post');\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"The blog post you've requested doesn't exist.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  const {\n    title,\n    description\n  } = post;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"JCvudjfcnJIGAQpev79UDPir4qw=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useParams","useState","useEffect","jsxDEV","_jsxDEV","Post","_s","slug","post","setPost","loading","setLoading","error","setError","fetchPost","response","fetch","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","style","padding","_c","$RefreshReg$"],"sources":["C:/Users/nguye/OneDrive/Desktop/webt6/frontend/src/pages/Post/index.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function Post() {\r\n  const { slug } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, [slug]);\r\n\r\n  const fetchPost = async () => {\r\n    try {\r\n      const response = await fetch(`https://c4flhn-3000.csb.app/api/blogs/${slug}`);\r\n      const data = await response.json();\r\n      setPost(data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch blog post');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n  if (!post) return <span>The blog post you've requested doesn't exist.</span>;\r\n\r\n  const { title, description } = post;\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h3>{title}</h3>\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCT,IAAI,EAAE,CAAC;MAC7E,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,OAAO,CAACQ,IAAI,CAAC;MACbN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZN,QAAQ,CAAC,2BAA2B,CAAC;MACrCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE,oBAAON,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIZ,KAAK,EAAE,oBAAOR,OAAA;IAAAgB,QAAA,EAAMR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACpC,IAAI,CAAChB,IAAI,EAAE,oBAAOJ,OAAA;IAAAgB,QAAA,EAAM;EAA6C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE5E,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGlB,IAAI;EAEnC,oBACEJ,OAAA;IAAKuB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAR,QAAA,gBAC1BhB,OAAA;MAAAgB,QAAA,EAAKK;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBpB,OAAA;MAAAgB,QAAA,EAAIM;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAAClB,EAAA,CAlCuBD,IAAI;EAAA,QACTL,SAAS;AAAA;AAAA6B,EAAA,GADJxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}