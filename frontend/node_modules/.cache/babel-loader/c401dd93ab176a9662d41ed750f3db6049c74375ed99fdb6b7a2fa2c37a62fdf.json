{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\OneDrive\\\\Desktop\\\\webt6\\\\frontend\\\\src\\\\pages\\\\PostLists\\\\index.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Link, Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostLists() {\n  _s();\n  const [blogPosts, setBlogPosts] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchBlogPosts();\n  }, []);\n  const fetchBlogPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts');\n      const data = await response.json();\n      setBlogPosts(data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch blog posts');\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Object.entries(blogPosts).map(_ref => {\n      let [slug, {\n        title\n      }] = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(PostLists, \"UhVSLhH2klr1MNO+0Z0qwB4qY8s=\");\n_c = PostLists;\nvar _c;\n$RefreshReg$(_c, \"PostLists\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","Outlet","useState","useEffect","jsxDEV","_jsxDEV","PostLists","_s","blogPosts","setBlogPosts","loading","setLoading","error","setError","fetchBlogPosts","response","fetch","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","_ref","slug","title","to","_c","$RefreshReg$"],"sources":["C:/Users/nguye/OneDrive/Desktop/webt6/frontend/src/pages/PostLists/index.js"],"sourcesContent":["import {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  Outlet,\r\n} from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function PostLists() {\r\n  const [blogPosts, setBlogPosts] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchBlogPosts();\r\n  }, []);\r\n\r\n  const fetchBlogPosts = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts');\r\n      const data = await response.json();\r\n      setBlogPosts(data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch blog posts');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <ul>\r\n      {Object.entries(blogPosts).map(([slug, { title }]) => (\r\n        <li key={slug}>\r\n          <Link to={`/posts/${slug}`}>\r\n            <h3>{title}</h3>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SACEA,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,MAAM,QACD,kBAAkB;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdW,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,YAAY,CAACQ,IAAI,CAAC;MAClBN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZN,QAAQ,CAAC,4BAA4B,CAAC;MACtCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAe,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIZ,KAAK,EAAE,oBAAOP,OAAA;IAAAe,QAAA,EAAMR;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACEnB,OAAA;IAAAe,QAAA,EACGK,MAAM,CAACC,OAAO,CAAClB,SAAS,CAAC,CAACmB,GAAG,CAACC,IAAA;MAAA,IAAC,CAACC,IAAI,EAAE;QAAEC;MAAM,CAAC,CAAC,GAAAF,IAAA;MAAA,oBAC/CvB,OAAA;QAAAe,QAAA,eACEf,OAAA,CAACL,IAAI;UAAC+B,EAAE,EAAE,UAAUF,IAAI,EAAG;UAAAT,QAAA,eACzBf,OAAA;YAAAe,QAAA,EAAKU;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC,GAHAK,IAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIT,CAAC;IAAA,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACjB,EAAA,CAnCuBD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}